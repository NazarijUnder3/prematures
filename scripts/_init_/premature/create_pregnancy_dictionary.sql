--liquibase formatted sql



--changeset NP:1 labels:create_table dbms:postgresql context:dev,qa,uat,prod
--comment: create table if not exists main.bmi
create table if not exists main.bmi (
    bmi_id     smallint 
		generated by default as identity ( start with 1 ) ,
    bmi_status varchar not null
);

comment on table main.bmi is
    'Body Mass Index';

alter table main.bmi 
	add constraint bmi_pk 
		primary key ( bmi_id );

alter table main.bmi 
	add constraint bmi_bmi_status_un 
		unique ( bmi_status );

-- Permissions
revoke all on main.bmi from public;

--rollback drop table if exists main.bmi;


--changeset NP:2 labels:fill_table dbms:postgresql context:dev,qa,uat,prod
--comment: fill table main.bmi
insert 
	into main.bmi
	values
		(1, 'ниже нормального веса, ( ,18.5)')
		, (2, 'нормальный вес, [18.5,25)')
		, (3, 'избыточный вес, [25,30)')
		, (4, 'ожирение I степени, [30,35)')
		, (5, 'ожирение II степени, [35,40)')
		, (6, 'ожирение III степени, [40, )')
	on conflict 
		do nothing
;

--rollback select 1;



--changeset NP:3 labels:create_table dbms:postgresql context:dev,qa,uat,prod
--comment: create table if not exists main.dad_age
create table if not exists main.dad_age (
    dad_age_id smallint not null
    , dad_age    varchar not null
);

comment on table main.dad_age is
    'Dad age group: less\greater or equal then 40';

alter table main.dad_age add constraint dad_pk
		primary key ( dad_age_id );

-- Permissions
revoke all on main.dad_age from public;

--rollback drop table if exists main.dad_age;


--changeset NP:4 labels:fill_table dbms:postgresql context:dev,qa,uat,prod
--comment: fill table main.dad_age
insert 
	into main.dad_age
	values
		(1, 'до 40')
		, (2, '40+')
	on conflict 
		do nothing
;

--rollback select 1;



--changeset NP:5 labels:create_table dbms:postgresql context:dev,qa,uat,prod
--comment: create table if not exists main.delivery
create table if not exists main.delivery (
    delivery_id   smallint not null
    , delivery_name varchar not null
);

comment on table main.delivery is
    'Completion of childbirth';

alter table main.delivery add constraint delivery_pk
		primary key ( delivery_id );

alter table main.delivery add constraint delivery_delivery_name_un unique ( delivery_name);

-- Permissions
revoke all on main.delivery from public;

--rollback drop table if exists main.delivery;


--changeset NP:6 labels:fill_table dbms:postgresql context:dev,qa,uat,prod
--comment: fill table main.delivery
insert 
	into main.delivery
	values
		(1, 'ЕРП')
		, (2, 'КС планово')
		, (3, 'КС экстренно')
	on conflict 
		do nothing
;

--rollback select 1;



--changeset NP:7 labels:create_table dbms:postgresql context:dev,qa,uat,prod
--comment: create table if not exists main.amniotic_fluid
create table if not exists main.amniotic_fluid (
    amniotic_fluid_id   smallint not null
    , amniotic_fluid_name varchar not null
);

comment on table main.amniotic_fluid is
    'Amniotic fluid';

alter table main.amniotic_fluid add constraint amniotic_fluid_pk
		primary key ( amniotic_fluid_id);

alter table main.amniotic_fluid add constraint amniotic_fluid_amniotic_fluid_name_un unique
( amniotic_fluid_name );

-- Permissions
revoke all on main.amniotic_fluid from public;

--rollback drop table if exists main.amniotic_fluid;


--changeset NP:8 labels:fill_table dbms:postgresql context:dev,qa,uat,prod
--comment: fill table main.amniotic_fluid
insert 
	into main.amniotic_fluid
	values
		(1, 'БО')
		, (2, 'зеленые')
	on conflict 
		do nothing
;

--rollback select 1;



--changeset NP:9 labels:create_table dbms:postgresql context:dev,qa,uat,prod
--comment: create table if not exists main.multipregnancy_condition
create table if not exists main.multipregnancy_condition (
    multipregnancy_condition_id   smallint not null
    , multipregnancy_condition_name varchar not null
);

comment on table main.multipregnancy_condition is
    'Child birth by count';

alter table main.multipregnancy_condition 
	add constraint multipregnancy_condition_pk 
		primary key ( multipregnancy_condition_id );

alter table main.multipregnancy_condition 
	add constraint multipregnancy_condition_multipregnancy_condition_name_un
		unique ( multipregnancy_condition_name );

-- Permissions
revoke all on main.multipregnancy_condition from public;

--rollback drop table if exists main.multipregnancy_condition;


--changeset NP:10 labels:fill_table dbms:postgresql context:dev,qa,uat,prod
--comment: fill table main.multipregnancy_condition
insert 
	into main.multipregnancy_condition
	values
		(1, 'БДУ')
		, (2, 'единственный')
		, (3, '1-й из двойни')
		, (4, '2-й из двойни')
	on conflict 
		do nothing
;

--rollback select 1;



--changeset NP:11 labels:create_table dbms:postgresql context:dev,qa,uat,prod
--comment: create table if not exists main.multipregnancy_result
create table if not exists main.multipregnancy_result (
    multipregnancy_result_id   smallint not null
    , multipregnancy_result_name varchar not null
);

comment on table main.multipregnancy_result is
    'The outcome of multiple pregnancy';

alter table main.multipregnancy_result add constraint multipregnancy_result_pk primary
key ( multipregnancy_result_id );

alter table main.multipregnancy_result add constraint multipregnancy_result_multipregnancy_result_name_un
unique ( multipregnancy_result_name );

-- Permissions
revoke all on main.multipregnancy_result from public;

--rollback drop table if exists main.multipregnancy_result;


--changeset NP:12 labels:fill_table dbms:postgresql context:dev,qa,uat,prod
--comment: fill table main.multipregnancy_result
insert 
	into main.multipregnancy_result
	values
		(1, 'одноплодный')
		, (2, 'второй плод замер')
		, (3, 'из двойни')
	on conflict 
		do nothing
;

--rollback select 1;



--changeset NP:13 labels:create_table dbms:postgresql context:dev,qa,uat,prod
--comment: create table if not exists main.multipregnancy
create table if not exists main.multipregnancy (
    multipregnancy_id   smallint not null
    , multipregnancy_name varchar not null
);

alter table main.multipregnancy add constraint multipregnancy_pk
		primary key ( multipregnancy_id );

alter table main.multipregnancy add constraint multipregnancy_multipregnancy_name_un unique
( multipregnancy_name );

-- Permissions
revoke all on main.multipregnancy from public;

--rollback drop table if exists main.multipregnancy;


--changeset NP:14 labels:fill_table dbms:postgresql context:dev,qa,uat,prod
--comment: fill table main.multipregnancy
insert 
	into main.multipregnancy
	values
		(1, 'нет')
		, (2, 'ДХДА')
		, (3, 'МХДА')
	on conflict 
		do nothing
;

--rollback select 1;



--changeset NP:15 labels:create_table dbms:postgresql context:dev,qa,uat,prod
--comment: create table if not exists main.fluid
create table if not exists main.fluid (
    fluid_id   smallint not null,
    fluid_name varchar not null
);

comment on table main.fluid is
    'Water(fluid)pregnancy';

alter table main.fluid 
	add constraint fluid_pk 
		primary key ( fluid_id );

alter table main.fluid 
	add constraint fluid_fluid_name_un 
		unique ( fluid_name );

-- Permissions
revoke all on main.fluid from public;

--rollback drop table if exists main.fluid;


--changeset NP:16 labels:fill_table dbms:postgresql context:dev,qa,uat,prod
--comment: fill table main.fluid
insert 
	into main.fluid
	values
		(1, 'норма')
		, (2, 'маловодие')
		, (3, 'многоводие')
	on conflict 
		do nothing
;

--rollback select 1;



--changeset NP:17 labels:create_table dbms:postgresql context:dev,qa,uat,prod
--comment: create table if not exists main.compitation
create table if not exists main.compitation (
    compitation_id   smallint not null
    , compitation_name varchar not null
);

comment on table main.compitation is
    'Complications during childbirth';

alter table main.compitation add constraint compitation_pk
		primary key ( compitation_id );

alter table main.compitation add constraint compitation_compitation_name_un unique ( compitation_name );

-- Permissions
revoke all on main.compitation from public;

--rollback drop table if exists main.compitation;


--changeset NP:18 labels:fill_table dbms:postgresql context:dev,qa,uat,prod
--comment: fill table main.compitation
insert 
	into main.compitation
	values
		(1, 'НМФПК')
		, (2, 'ПИОПВ')
		, (3, 'преэклампсия')
		, (4, 'угроза разрыва старого рубца')
	on conflict 
		do nothing
;

--rollback select 1;



--changeset NP:19 labels:create_table dbms:postgresql context:dev,qa,uat,prod
--comment: create table if not exists main.presentation
create table if not exists main.presentation (
    presentation_id   smallint not null
    , presentation_name varchar not null
);

comment on table main.presentation is
    'List of fetal presentations: головное, ножное, поперечное, тазовое, ягодичное';

alter table main.presentation add constraint presentation_pk
		primary key ( presentation_id );

alter table main.presentation add constraint presentation_presentation_name_un unique
( presentation_name );

-- Permissions
revoke all on main.presentation from public;

--rollback drop table if exists main.presentation;


--changeset NP:20 labels:fill_table dbms:postgresql context:dev,qa,uat,prod
--comment: fill table main.presentation
insert 
	into main.presentation
	values
		(1, 'головное')
		, (2, 'ножное')
		, (3, 'поперечное')
		, (4, 'тазовое')
		, (5, 'ягодичное')
	on conflict 
		do nothing
;

--rollback select 1;



--changeset NP:21 labels:create_table dbms:postgresql context:dev,qa,uat,prod
--comment: create table if not exists main.status
create table if not exists main.status (
    status_id   smallint not null,
    status_name varchar not null
);

comment on table main.status is
    'Is the mother lonely';

alter table main.status 
	add constraint status_pk 
		primary key ( status_id );

alter table main.status 
	add constraint status_status_name_un 
		unique ( status_name );

-- Permissions
revoke all on main.status from public;

--rollback drop table if exists main.status;


--changeset NP:22 labels:fill_table dbms:postgresql context:dev,qa,uat,prod
--comment: fill table main.status
insert 
	into main.status
	values
		(1, 'да')
		, (2, 'нет')
	on conflict 
		do nothing
;

--rollback select 1;



--changeset NP:23 labels:create_table dbms:postgresql context:dev,qa,uat,prod
--comment: create table if not exists main.mother
create table if not exists main.mother (
    mother_id         smallint not null
    , mother_first_name varchar
    , mother_last_name  varchar
);

alter table main.mother add constraint mother_pk
		primary key ( mother_id );

-- Permissions
revoke all on main.mother from public;

--rollback drop table if exists main.mother;